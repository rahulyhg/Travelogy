@model WebApplication1.Models.AccommodationBookingViewModel

@Html.Partial("_HomepageCarousel")

<div class="headline">
    <h2>Booking Request for Accommodation</h2>     
</div>    

<div class="row">
    <div class="col-sm-12 info-blocks">
        <i class="icon-compass icon-info-blocks"></i>
        <div class="info-blocks-in">
            <h3>Your trip: @Model.TripName -- @Model.TripId</h3>
            <p>@Model.TripDescription</p>
        </div>
    </div>
    <div class="col-sm-12 info-blocks">
        <i class="icon-ok-sign icon-info-blocks"></i>
        <div class="info-blocks-in">
            <h3>@Model.TripStepName</h3>
            <p>@Model.TripStepDescription</p>
            @if(Model.TripStepStartDate.HasValue && Model.TripStepEndDate.HasValue)
            {
                <h6>@Model.TripStepStartDate.Value.ToShortDateString() - to - @Model.TripStepEndDate.Value.ToShortDateString() </h6>
            }
        </div>
    </div>    
</div>

<hr class="margin-bottom-20"> 

<blockquote>
    <p>Accommodation bookings are done through the local travel agency who is handling your trip.<br /> Travelogers will update the status of your booking within 2 working days of requesting.</p>   
</blockquote>

<div>
    @using (Html.BeginForm("SaveTripBookingAccommodationAsync", "Service", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.TripStepId)
        @Html.HiddenFor(model => model.TripId)

        <div class="panel panel-orange">
            <div class="panel-body">

                @Html.LabelFor(model => model.AccommodationType)
                <div class="row margin-bottom-10">
                    <div class="col-md-5 col-md-offset-0">
                        @Html.DropDownListFor(model => model.AccommodationType, Model.ListOfAccommodationTypes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccommodationType, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.LabelFor(model => model.CheckinDate)
                <div class="row margin-bottom-10">
                    <div class="col-md-3 col-md-offset-0">
                        @Html.EditorFor(model => model.CheckinDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.CheckinDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.LabelFor(model => model.CheckoutDate)
                <div class="row margin-bottom-10">
                    <div class="col-md-3 col-md-offset-0">
                        @Html.EditorFor(model => model.CheckoutDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.CheckoutDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.LabelFor(model => model.Notes)                
                <div class="row margin-bottom-10">
                    <div class="col-md-11 col-md-offset-0">
                        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @rows = 4 })                        
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger"})
                    </div>
                </div>

                @Html.LabelFor(model => model.SpecialRequests)
                <div class="row margin-bottom-10">
                    <div class="col-md-11 col-md-offset-0">
                        @Html.TextAreaFor(model => model.SpecialRequests, new { @class = "form-control", @rows = 4 })
                        @Html.ValidationMessageFor(model => model.SpecialRequests, "", new { @class = "text-danger" })
                    </div>
                </div>                             
            </div>
        </div>

        <div class="row margin-bottom-20">
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Save" class="btn btn-orange" />
                    <input type="reset" value="Reset" class="btn btn-black" />
                </div>                
            </div>
        </div>

        @Html.ValidationMessage("blError.ErrorMessage", new { @class = "text-danger" })
    }

    <div>
        @Html.ActionLink("Go back to trip details", "EditTrip", new { @tripId = Model.TripId })
    </div>
</div>

