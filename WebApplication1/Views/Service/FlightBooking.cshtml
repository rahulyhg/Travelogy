@model WebApplication1.Models.FlightBookingViewModel

@Html.Partial("_HomepageCarousel")

<div class="headline">
    <h2>Transfer Booking Request</h2>
</div>  

<div class="row">
    <div class="col-sm-12 info-blocks">        
        <div class="info-blocks-in">
            <h3>Your trip: @Model.TripName -- @Model.TripId</h3>
            <h4>
                Planned on: 
                @if(Model.TripStartDate.HasValue)
                {
                    @Model.TripStartDate.Value.ToShortDateString()
                }
                else
                {
                    @Html.Raw("Not planned")
                }
            </h4>            
            <p>@Model.TripDescription</p>
        </div>
    </div>

    @if (Model.TripStepId > 0)
    {
        <div class="col-sm-12 info-blocks">            
            <div class="info-blocks-in">
                <h3>@Model.TripStepName</h3>
                <p>@Model.TripStepDescription</p>
                @if (Model.TripStepStartDate.HasValue && Model.TripStepEndDate.HasValue)
                {
                    <h6>@Model.TripStepStartDate.Value.ToShortDateString() - to - @Model.TripStepEndDate.Value.ToShortDateString() </h6>
                }
            </div>
        </div>
    }    
</div>

<div class="headline">
    <h3>Transfer details</h3>
</div>  

<div class="container">

    <div class="row">
        @using (Html.BeginForm("SaveFlightBookingAccommodationAsync", "Service", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.TripBookingTransportId)
            @Html.HiddenFor(model => model.TripStepId)
            @Html.HiddenFor(model => model.TripId)

            <div class="panel panel-orange">
                <div class="panel-body">                   
                    <div class="row margin-bottom-10">                       
                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.FlightDate) <br />
                            @Html.EditorFor(model => model.FlightDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.FlightDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.From) <br />
                            @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.To) <br />
                            @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.FlightClass) <br />
                            @Html.DropDownListFor(model => model.FlightClass, Model.ListOfFlightClasses, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FlightClass, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row margin-bottom-10">
                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.Adults) <br />
                            @Html.EditorFor(model => model.Adults, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Adults, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 col-md-offset-0">
                            @Html.LabelFor(model => model.Kids) <br />
                            @Html.EditorFor(model => model.Kids, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Kids, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.LabelFor(model => model.TravellerNotes)
                    <div class="row margin-bottom-10">
                        <div class="col-md-9 col-md-offset-0">
                            @Html.TextAreaFor(model => model.TravellerNotes, new { @class = "form-control", @rows = 4 })
                            @Html.ValidationMessageFor(model => model.TravellerNotes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row margin-bottom-20">
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Save" class="btn btn-orange" />
                                <input type="reset" value="Reset" class="btn btn-black" />
                            </div>
                        </div>
                    </div>

                    @Html.ValidationMessage("blError.ErrorMessage", new { @class = "text-danger" })

                </div>
            </div>
        }
    </div>

    <div class="row">
        @Html.ActionLink("Go back to trip details", "ViewTrip", new { @tripId = Model.TripId })
    </div>

</div>

